#!/usr/bin/env python3
import re
import os
import sys

from typing import List

ITEM_RE = re.compile(
    r"\s*(?P<nr_range>\d+(-\d+)?)\s+(?P<aue>AUE_[A-Z0-9a-z_]+)\s+(?P<type>[A-Z0-9]+(\s*\|\s*[A-Z0-9]+)*)\s*"
    r"(\{\s*\w+(\s+|\s*(\*)?\s*)(?P<name>\w+)\s*\([^{}]*?\)(\s*NO_SYSCALL_STUB)?\s*;\s*\}(\s*\{[^}]+\}|([ \t]+(?P<altname>\w+)([ \t+]\w+){0,2})?)?|[^{\n]*)\s+"
)


def main(args: List[str]) -> None:
    if len(args) != 2:
        print("Usage: {} <syscalls.master file> <OS name>".format(sys.argv[0]))
        sys.exit(1)

    repo_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))

    syscalls_fname = args[0]
    os_name = args[1]

    nr_file_paths = [
        os.path.join(repo_path, "src/platform", name, "nr.rs")
        for name in os.listdir(os.path.join(repo_path, "src/platform"))
        if name.startswith(os_name + "-")
    ]

    text = ""
    with open(syscalls_fname) as file:
        for line in file:
            line = line.strip()
            if line and not line.startswith(
                ("$", ";", "#include", "#if", "#ifdef", "#else", "#endif")
            ):
                text += line + "\n"

    syscalls = []

    scanner = ITEM_RE.scanner(text)
    for match in iter(scanner.match, None):
        nr_range = match.group("nr_range")
        sc_types = [name.strip() for name in match.group("type").split("|")]
        name = (match.group("name") or "").upper()
        altname = (match.group("altname") or "").upper()

        if "-" in nr_range:
            assert not name
            continue

        nr = int(nr_range)

        if nr == 0 and name in ("NOSYS", "ENOSYS"):
            name = "SYSCALL"

        if os_name == "freebsd":
            if name.startswith("__"):
                name = name[2:]

        if not name:
            continue
        if name in ("NOSYS", "ENOSYS"):
            if altname:
                name = altname
            else:
                continue

        if os_name == "freebsd":
            name = {
                "SYS_EXIT": "EXIT",
                "__SYSCALL": "_SYSCALL",
            }.get(name, name)

            if "COMPAT" in sc_types:
                continue
            if "COMPAT4" in sc_types:
                name = "FREEBSD4_" + name
            if "COMPAT6" in sc_types:
                name = "FREEBSD6_" + name
            if "COMPAT7" in sc_types:
                name = "FREEBSD7_" + name
            if "COMPAT11" in sc_types:
                name = "FREEBSD11_" + name

        elif os_name == "macos":
            name = {
                "SYSCTL": "__SYSCTL",
            }.get(name, name)

        syscalls.append((name, nr))

    for fpath in nr_file_paths:
        with open(fpath, "w") as file:
            file.write("/* Automatically generated by bsd_nr_from_src.py */\n\n")

            for (name, nr) in syscalls:
                file.write("pub const {}: usize = {};\n".format(name, nr))


if __name__ == "__main__":
    main(sys.argv[1:])
